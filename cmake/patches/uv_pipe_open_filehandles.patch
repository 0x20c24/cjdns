--- ./src/win/pipe.c	2013-05-14 19:50:19.000000000 -0400
+++ ./src/win/pipe.c	2013-05-25 02:09:58.129127000 -0400
@@ -208,12 +208,8 @@
   return err;
 }
 
-
-static int uv_set_pipe_handle(uv_loop_t* loop, uv_pipe_t* handle,
-    HANDLE pipeHandle, DWORD duplex_flags) {
-  NTSTATUS nt_status;
-  IO_STATUS_BLOCK io_status;
-  FILE_MODE_INFORMATION mode_info;
+static int uv_check_handle_is_a_pipe(HANDLE pipeHandle)
+{
   DWORD mode = PIPE_TYPE_BYTE | PIPE_READMODE_BYTE | PIPE_WAIT;
 
   if (!SetNamedPipeHandleState(pipeHandle, &mode, NULL, NULL)) {
@@ -224,6 +220,14 @@
     }
     return -1;
   }
+  return 0;
+}
+
+static int uv_set_pipe_handle(uv_loop_t* loop, uv_pipe_t* handle,
+    HANDLE pipeHandle, DWORD duplex_flags) {
+  NTSTATUS nt_status;
+  IO_STATUS_BLOCK io_status;
+  FILE_MODE_INFORMATION mode_info;
 
   /* Check if the pipe was created with FILE_FLAG_OVERLAPPED. */
   nt_status = pNtQueryInformationFile(pipeHandle,
@@ -462,7 +466,9 @@
     goto error;
   }
 
-  if (uv_set_pipe_handle(loop, handle, handle->accept_reqs[0].pipeHandle, 0)) {
+  if (uv_check_handle_is_a_pipe(handle) ||
+      uv_set_pipe_handle(loop, handle, handle->accept_reqs[0].pipeHandle, 0))
+  {
     uv__set_sys_error(loop, GetLastError());
     goto error;
   }
@@ -515,6 +521,7 @@
   }
 
   if (pipeHandle != INVALID_HANDLE_VALUE &&
+      !uv_check_handle_is_a_pipe(handle) &&
       !uv_set_pipe_handle(loop, handle, pipeHandle, duplex_flags)) {
     SET_REQ_SUCCESS(req);
   } else {
@@ -575,7 +582,8 @@
 
   assert(pipeHandle != INVALID_HANDLE_VALUE);
 
-  if (uv_set_pipe_handle(loop,
+  if (uv_check_handle_is_a_pipe(pipeHandle) ||
+      uv_set_pipe_handle(loop,
                          (uv_pipe_t*) req->handle,
                          pipeHandle,
                          duplex_flags)) {
@@ -683,7 +691,8 @@
       return;
     }
 
-    if (uv_set_pipe_handle(loop, handle, req->pipeHandle, 0)) {
+    if (uv_check_handle_is_a_pipe(req->pipeHandle) ||
+        uv_set_pipe_handle(loop, handle, req->pipeHandle, 0)) {
       CloseHandle(req->pipeHandle);
       req->pipeHandle = INVALID_HANDLE_VALUE;
       SET_REQ_ERROR(req, GetLastError());
@@ -1637,8 +1646,11 @@
 int uv_pipe_open(uv_pipe_t* pipe, uv_file file) {
   HANDLE os_handle = (HANDLE)_get_osfhandle(file);
 
-  if (os_handle == INVALID_HANDLE_VALUE ||
-      uv_set_pipe_handle(pipe->loop, pipe, os_handle, 0) == -1) {
+  if (os_handle == INVALID_HANDLE_VALUE) {
+    os_handle = (HANDLE)file;
+  }
+
+  if (uv_set_pipe_handle(pipe->loop, pipe, os_handle, 0) == -1) {
     uv__set_sys_error(pipe->loop, WSAEINVAL);
     return -1;
   }

