Results of benchmarking cjdns on different systems:
To make your own benchmark:
./cjdroute --bench
cat /proc/cpuinfo
git log | head -n 1

Paste results to https://ezcrypt.it/ and tell us about it in the IRC channel!
Weird processors wanted :D



user@debo8:~/wrk/play/mygit/cjdns/build$ ./cjdroute --bench
These metrics are speed of encryption and decryption similar to the usage pattern
when decrypting a packet, switching it, and re-encrypting it with another key.
Test sending 1000 64 byte	hello packets.	packet auth enabled.	Finished in 466ms. 1098 Kb/s

Test sending 1000 1500 byte	hello packets.	packet auth enabled.	Finished in 432ms. 27776 Kb/s

Test sending 1000 64 byte	key packets.	packet auth enabled.	Finished in 671ms. 763 Kb/s

Test sending 1000 1500 byte	key packets.	packet auth enabled.	Finished in 683ms. 17568 Kb/s

Test sending 100000 64 byte	data packets.	packet auth disabled.	Finished in 101ms. 506930 Kb/s

Test sending 100000 1500 byte	data packets.	packet auth disabled.	Finished in 1021ms. 1175318 Kb/s

Test sending 100000 64 byte	data packets.	packet auth enabled.	Finished in 360ms. 142222 Kb/s

This is the switch configuration so this indicates expected switch throughput:
Test sending 100000 1500 byte	data packets.	packet auth enabled.	Finished in 1708ms. 702576 Kb/s

user@debo8:~/wrk/play/mygit/cjdns/build$ cat /proc/cpuinfo | head
processor	: 0
vendor_id	: AuthenticAMD
cpu family	: 16
model		: 9
model name	: AMD Opteron(tm) Processor 6128
stepping	: 1
microcode	: 0x10000c4
cpu MHz		: 800.000
cache size	: 512 KB
physical id	: 0
user@debo8:~/wrk/play/mygit/cjdns/build$ git log -n 1
commit c2cfff7b4ef1339942f3e98eb0d99a093d307a9b







cjdns@abacus:~/cjdns/build$ ./cjdroute --bench
These metrics are speed of encryption and decryption similar to the usage pattern
when decrypting a packet, switching it, and re-encrypting it with another key.
Test sending 1000 64 byte	hello packets.	packet auth enabled.	Finished in 96628ms. 5 Kb/s

Test sending 1000 1500 byte	hello packets.	packet auth enabled.	Finished in 100130ms. 119 Kb/s

Test sending 1000 64 byte	key packets.	packet auth enabled.	Finished in 149438ms. 3 Kb/s

Test sending 1000 1500 byte	key packets.	packet auth enabled.	Finished in 152898ms. 78 Kb/s

Test sending 100000 64 byte	data packets.	packet auth disabled.	Finished in 2241ms. 22846 Kb/s

Test sending 100000 1500 byte	data packets.	packet auth disabled.	Finished in 34007ms. 35286 Kb/s

Test sending 100000 64 byte	data packets.	packet auth enabled.	Finished in 12059ms. 4245 Kb/s

This is the switch configuration so this indicates expected switch throughput:
Test sending 100000 1500 byte	data packets.	packet auth enabled.	Finished in 151882ms. 7900 Kb/s

cjdns@abacus:~/cjdns/build$ cat /proc/cpuinfo
Processor	: Feroceon 88FR131 rev 1 (v5l)
BogoMIPS	: 1196.85
Features	: swp half thumb fastmult edsp 
CPU implementer	: 0x56
CPU architecture: 5TE
CPU variant	: 0x2
CPU part	: 0x131
CPU revision	: 1

Hardware	: Marvell OpenRD Client Board
Revision	: 0000
Serial		: 0000000000000000
cjdns@abacus:~/cjdns/build$ git log -n 1
commit c2cfff7b4ef1339942f3e98eb0d99a093d307a9b




cjdns@ks397481:~/cjdns/build$ ./cjdroute --bench
These metrics are speed of encryption and decryption similar to the usage pattern
when decrypting a packet, switching it, and re-encrypting it with another key.
Test sending 1000 64 byte	hello packets.	packet auth enabled.	Finished in 3420ms. 149 Kb/s

Test sending 1000 1500 byte	hello packets.	packet auth enabled.	Finished in 3491ms. 3437 Kb/s

Test sending 1000 64 byte	key packets.	packet auth enabled.	Finished in 3413ms. 150 Kb/s

Test sending 1000 1500 byte	key packets.	packet auth enabled.	Finished in 3465ms. 3462 Kb/s

Test sending 100000 64 byte	data packets.	packet auth disabled.	Finished in 103ms. 497087 Kb/s

Test sending 100000 1500 byte	data packets.	packet auth disabled.	Finished in 1581ms. 759013 Kb/s

Test sending 100000 64 byte	data packets.	packet auth enabled.	Finished in 724ms. 70718 Kb/s

This is the switch configuration so this indicates expected switch throughput:
Test sending 100000 1500 byte	data packets.	packet auth enabled.	Finished in 4257ms. 281888 Kb/s

cjdns@ks397481:~/cjdns/build$ cat /proc/cpuinfo | head
processor	: 0
vendor_id	: GenuineIntel
cpu family	: 6
model		: 28
model name	: Intel(R) Atom(TM) CPU D425   @ 1.80GHz
stepping	: 10
cpu MHz		: 1799.735
cache size	: 512 KB
physical id	: 0
siblings	: 2
cjdns@ks397481:~/cjdns/build$ git log | head -n 1
commit fd4964634de971c888bb079d0e62b411c471803a









user@ubntfusion2:~/cjdns/build$ ./cjdroute --bench
These metrics are speed of encryption and decryption similar to the usage pattern
when decrypting a packet, switching it, and re-encrypting it with another key.
Test sending 1000 64 byte	hello packets.	packet auth enabled.	Finished in 916ms. 558 Kb/s

Test sending 1000 1500 byte	hello packets.	packet auth enabled.	Finished in 939ms. 12778 Kb/s

Test sending 1000 64 byte	key packets.	packet auth enabled.	Finished in 1341ms. 381 Kb/s

Test sending 1000 1500 byte	key packets.	packet auth enabled.	Finished in 1368ms. 8771 Kb/s

Test sending 100000 64 byte	data packets.	packet auth disabled.	Finished in 134ms. 382089 Kb/s

Test sending 100000 1500 byte	data packets.	packet auth disabled.	Finished in 2291ms. 523788 Kb/s

Test sending 100000 64 byte	data packets.	packet auth enabled.	Finished in 526ms. 97338 Kb/s

This is the switch configuration so this indicates expected switch throughput:
Test sending 100000 1500 byte	data packets.	packet auth enabled.	Finished in 3386ms. 354400 Kb/s

user@ubntfusion2:~/cjdns/build$ cat /proc/cpuinfo | head
processor	: 0
vendor_id	: AuthenticAMD
cpu family	: 20
model		: 1
model name	: AMD E-350 Processor
stepping	: 0
microcode	: 0x5000028
cpu MHz		: 800.000
cache size	: 512 KB
physical id	: 0
user@ubntfusion2:~/cjdns/build$ git log | head -n 1
commit 3d2ce46d3c9df964ddf37dbdb03dccbcac862d5a
user@ubntfusion2:~/cjdns/build$
